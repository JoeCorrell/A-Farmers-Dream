{
  "format_version": "1.20.0",
  "minecraft:block": {
    "description": {
      "identifier": "block:kitchen_drawer_jungle",
      "menu_category": {
        "category": "construction"
      },
      "properties": {
        //Property for whether or not the block should have a stripped texture =>
        //Property for determining the rotation the block will have when placed =>
        "property:direction_player_is_facing": [
          0, //North
          1, //South
          2, //West
          3 //East
        ],
        //Property for choosing which doors are opened, if any =>
        "property:animated": [
          0, //Dummy value but also closed v1
          1, //Closed
          2, //Right Door Opened
          3, //Left Door Opened
          4 //Both Doors Opened
        ],
        "property:stripped": [0, 1],
        "property:timer": [0, 1]
      }
    },
    "permutations": [
      {
        //These permutations are for what direction the player is facing =>
        "condition": "query.block_property('property:direction_player_is_facing')== 0",
        "components": {
          "minecraft:transformation": {
            "rotation": [0, 0, 0]
          }
        }
      },
      {
        "condition": "query.block_property('property:direction_player_is_facing')== 1",
        "components": {
          "minecraft:transformation": {
            "rotation": [0, 180, 0]
          }
        }
      },
      {
        "condition": "query.block_property('property:direction_player_is_facing')== 2",
        "components": {
          "minecraft:transformation": {
            "rotation": [0, 90, 0]
          }
        }
      },
      {
        "condition": "query.block_property('property:direction_player_is_facing')== 3",
        "components": {
          "minecraft:transformation": {
            "rotation": [0, 270, 0]
          }
        }
      },
      {
        //These are for whether or not the block is stripped =>
        "condition": "query.block_property('property:stripped') == 1",
        "components": {
          "minecraft:material_instances": {
            "*": {
              "texture": "kitchen_jungle_stripped",
              "ambient_occlusion": true,
              "render_method": "alpha_test"
            }
          }
        }
      },
      {
        "condition": "query.block_property('property:stripped') == 0",
        "components": {
          "minecraft:material_instances": {
            "*": {
              "texture": "kitchen_jungle",
              "ambient_occlusion": true,
              "render_method": "alpha_test"
            }
          }
        }
      },
      {
        //This permutations is a dummy to prevent multiple storage entities from spawning when the property:animated resets to 0. Maybe a bug? =>
        "condition": "query.block_property('property:animated') == 0",
        "components": {
          "minecraft:geometry": "geometry.drawer_wood_closed",
          "minecraft:queued_ticking": {
            "looping": false,
            "interval_range": [0.25, 0.25],
            "on_tick": {
              "event": "event:place_inventory" //Sets property:animated to 1 so no more storage entities spawn =>
            }
          }
        }
      },
      {
        //This is for if the doors are closed then the storage entity hitbox is 0, to be more realistic =>
        "condition": "query.block_property('property:timer') == 1",
        "components": {
          "minecraft:selection_box": {
            "origin": [-8, 0, -8],
            "size": [16, 16, 16]
          },
          "minecraft:queued_ticking": {
            "looping": true,
            "interval_range": [0.01, 0.01],
            "on_tick": {
              "event": "event:are_doors_open"
            }
          }
        }
      },
      {
        //These permutations are for changing what doors are opened, if any =>
        "condition": "query.block_property('property:animated') == 1",
        "components": {
          "minecraft:geometry": "geometry.drawer_wood_closed"
        }
      },
      {
        "condition": "query.block_property('property:animated') == 2",
        "components": {
          "minecraft:selection_box": {
            "origin": [-8, 0, -8],
            "size": [16, 16, 13]
          },
          "minecraft:geometry": "geometry.drawer_wood_right_opened"
        }
      },
      {
        "condition": "query.block_property('property:animated') == 3",
        "components": {
          "minecraft:selection_box": {
            "origin": [-8, 0, -8],
            "size": [16, 16, 13]
          },
          "minecraft:geometry": "geometry.drawer_wood_left_opened"
        }
      },
      {
        "condition": "query.block_property('property:animated') == 4",
        "components": {
          "minecraft:selection_box": {
            "origin": [-8, 0, -8],
            "size": [16, 16, 13]
          },
          "minecraft:geometry": "geometry.drawer_wood_both_opened"
        }
      }
      //After this permutation the block resets property:animated back to 1, not 0 read why above @ property:animated = 0 comment =>
    ],
    "components": {
      "minecraft:selection_box": {
        "origin": [-8, 0, -8],
        "size": [16, 16, 16]
      },
      "minecraft:collision_box": {
        "origin": [-8, 0, -8],
        "size": [16, 16, 10]
      },
      "minecraft:destructible_by_mining": {
        "seconds_to_destroy": 0.3
      },
      "minecraft:on_player_placing": {
        "event": "event:block_placed"
      },
      "minecraft:on_interact": {
        "event": "event:cycle_properties",
        "target": "self"
      },
      "minecraft:loot": "loot_tables/kitchen_furniture_loot/kitchen_furniture_drawer_loot/kitchen_drawer_jungle.loot.json",
      "minecraft:destructible_by_explosion": {
        "explosion_resistance": 15
      },
      "minecraft:material_instances": {
        "*": {
          "texture": "kitchen_jungle",
          "ambient_occlusion": true,
          "render_method": "alpha_test"
        }
      },
      "minecraft:map_color": "#7d7d7d"
    },
    "events": {
      //This event is for the dummy permutation, to prevent multiple storage entities from spawning when property:animated resets, possibly a bug? =>
      "event:place_inventory": {
        "run_command": {
          "command": [
            "/summon entity:kitchen_furniture_inventory drawer ~ ~-0.25 ~"
          ]
        },
        "set_block_property": {
          "property:animated": 1,
          "property:stripped": 0,
          "property:timer": 1
        }
      },
      //Event for changing the inventory entity hit box if drawer is not open =>
      "event:are_doors_open": {
        "sequence": [
          {
            "condition": "q.block_property('property:animated') <= 1",
            "run_command": {
              "command": [
                "/event entity @e[type=entity:kitchen_furniture_inventory,r=1] event:inventory_has_no_hit_box"
              ]
            }
          },
          {
            "condition": "q.block_property('property:animated') > 1",
            "run_command": {
              "command": [
                "/event entity @e[type=entity:kitchen_furniture_inventory,r=1] event:inventory_has_hit_box"
              ]
            }
          }
        ]
      },
      //Determines what direction player is facing, and decides what rotation to apply via permutations =>
      "event:block_placed": {
        "set_block_property": {
          "property:direction_player_is_facing": "q.cardinal_facing_2d-2"
        }
      },
      //Cycles through the property:color and property:animated to save space on code =>
      "event:cycle_properties": {
        "sequence": [
          {
            "condition":"!q.is_item_name_any('slot.weapon.mainhand', 'minecraft:wooden_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:stone_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:iron_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:golden_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:diamond_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:netherite_axe') && !q.is_sneaking && q.block_property('property:animated') == 4",
            "run_command": {
              "command": ["/playsound drawer.close @p"]
            }
          },
          {
            "condition": "!q.is_item_name_any('slot.weapon.mainhand', 'minecraft:wooden_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:stone_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:iron_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:golden_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:diamond_axe') && !q.is_item_name_any('slot.weapon.mainhand', 'minecraft:netherite_axe') && !q.is_sneaking && q.block_property('property:animated') >= 1",
            "set_block_property": {
              "property:animated": "q.block_property('property:animated') == 4 ? 1 :q.block_property('property:animated')+1"
            },
            "run_command": {
              "command": ["/playsound drawer.open @p"]
            }
          },
          {
            "condition": "q.is_sneaking && q.block_property('property:stripped') == 0 && q.is_item_name_any('slot.weapon.mainhand', 'minecraft:wooden_axe') || q.is_item_name_any('slot.weapon.mainhand', 'minecraft:stone_axe') || q.is_item_name_any('slot.weapon.mainhand', 'minecraft:iron_axe') || q.is_item_name_any('slot.weapon.mainhand', 'minecraft:diamond_axe') || q.is_item_name_any('slot.weapon.mainhand', 'minecraft:netherite_axe') || q.is_item_name_any('slot.weapon.mainhand', 'minecraft:golden_axe')",
            "set_block_property": {
              "property:stripped": 1
            },
            "run_command": {
              "command": ["/playsound use.wood @p"]
            }
          }
        ]
      }
    }
  }
}
